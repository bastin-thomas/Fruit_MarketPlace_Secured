/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package be.hepl.java_mail.GUI;

import be.hepl.java_mail.JMailLib.ClientMail;
import be.hepl.java_mail.JMailLib.UtilityLib;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.mail.Address;
import javax.mail.MessagingException;
import javax.mail.Multipart;
import javax.mail.NoSuchProviderException;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.filechooser.FileSystemView;

/**
 *
 * @author student
 */
public class NewMail extends javax.swing.JFrame {
    // <editor-fold defaultstate="collapsed" desc="Properties">
    private final ClientMail session;
    private final HomePage home;
    
    private final ArrayList<String> FileList;
    private final MimeMessage mail;
    private final Multipart Multip;
    // </editor-fold>
    
    // <editor-fold defaultstate="collapsed" desc="Constructors">
    /**
     * Creates new form OpenMail
     * @param cl
     * @param home
     * @throws javax.mail.MessagingException
     */
    public NewMail(ClientMail cl, HomePage home) throws MessagingException {
        initComponents();
        session = cl;
        this.home = home;
        
        FileList = new ArrayList<>();
        
        //Creation d'un message vide contenant un multipart vide
        mail = new MimeMessage(session.getSession());
        Multip = new MimeMultipart();
        mail.setContent(Multip);
        
        
        
        From.setText(session.getIdent());
    }
    // </editor-fold>

    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Message1 = new javax.swing.JTextPane();
        Send = new javax.swing.JButton();
        KO = new javax.swing.JButton();
        From = new javax.swing.JTextField();
        To = new javax.swing.JTextField();
        Cc = new javax.swing.JTextField();
        Subject = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        Add = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("New Email");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("From :");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 15, -1, 20));

        jLabel2.setText("To :");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 50, 30, 20));

        jLabel3.setText("Cc :");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 85, -1, 20));

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setViewportView(Message1);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 177, 579, 341));

        Send.setText("Envoyer");
        Send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendActionPerformed(evt);
            }
        });
        getContentPane().add(Send, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 590, 161, 41));

        KO.setText("Annuler");
        KO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KOActionPerformed(evt);
            }
        });
        getContentPane().add(KO, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 590, 148, 41));

        From.setEditable(false);
        From.setFocusable(false);
        getContentPane().add(From, new org.netbeans.lib.awtextra.AbsoluteConstraints(121, 12, 470, 29));
        getContentPane().add(To, new org.netbeans.lib.awtextra.AbsoluteConstraints(121, 47, 470, 29));
        getContentPane().add(Cc, new org.netbeans.lib.awtextra.AbsoluteConstraints(121, 82, 470, 29));
        getContentPane().add(Subject, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 136, 579, 35));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No Attachement" }));
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 530, 450, 30));

        Add.setText("Add File");
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });
        getContentPane().add(Add, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 530, 100, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // </editor-fold>
    
    private void KOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KOActionPerformed
        this.dispose();
    }//GEN-LAST:event_KOActionPerformed
       
    private void SendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendActionPerformed
        // Create And Send The Mail
        Address[] ToAddresses = null;
        Address[] CcAddresses = null;

        //Recuperation des addresses destinataire
        try {
            ToAddresses = GetEmailAddress(this.To, "To");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        //Recuperation des addresses CarbonCopy
        try {
            CcAddresses = GetEmailAddress(this.Cc, "Cc");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if(jComboBox1.getSelectedItem().equals("No Attachement")){
            try {
                //SimpleMail
                UtilityLib.createMessageSimple(mail, ToAddresses, CcAddresses, Subject.getText(), Message1.getText());
            } catch (MessagingException | UnsupportedEncodingException ex) {
                JOptionPane.showMessageDialog(this, "Erreur Création Simple Mail: " + ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
                return;
            }
            System.out.println("SimpleMail envoyé");
        }
        else{            
            try {
                //ComplexMail    
                UtilityLib.createMessageMultiPart(mail, Multip, ToAddresses, CcAddresses, Subject.getText(), Message1.getText());
            } catch (MessagingException ex) {
                JOptionPane.showMessageDialog(this, "Erreur Création Complex Mail: " + ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
                return;
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(NewMail.class.getName()).log(Level.SEVERE, null, ex);
            }
            System.out.println("ComplexMail envoyé");
        }
        
        
        try {
            Transport transport = session.getSession().getTransport("smtps");
            transport.send(mail);
            transport.close();
        } catch (MessagingException ex) {
            JOptionPane.showMessageDialog(this, "Erreur d'envoi: " + ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        
        
        this.dispose();
    }//GEN-LAST:event_SendActionPerformed

    private Address[] GetEmailAddress(JTextField textbox, String Name) throws Exception{        
        //Check the email list To:
        //Regex: https://stackoverflow.com/questions/4412725/how-to-match-a-comma-separated-list-of-emails-with-regex
        Pattern p = Pattern.compile("(^([a-z0-9!#$%&'*+/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*)(([, ]+[a-z0-9!#$%&'*+/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])\\.([a-z0-9]([a-z0-9-]*[a-z0-9]))*)?)*$)");
        Matcher m = p.matcher(textbox.getText());
        
        if(textbox.getText().equals("")){
            return null;
        }     
        
        //Check the email list To:
        if(!m.find() && (!textbox.getText().equals(""))){
            throw new Exception("Erreur de syntaxe "+Name+": " + "Votre liste d'email doit être composé de Virgule\nentre chaque mail et composé de format d'email valide.");
        }       
        
        //Construct Address To List:
        String[] AddressList = textbox.getText().split("\\s*,[,\\s]*");
        Address[] buffer = new Address[AddressList.length];
        
        //Convert AddressList to AddressArray
        int i = 0;
        boolean isYourSelfFound = false;
        for(String name : AddressList){
            
            if(name.equals(this.session.getIdent())){
                isYourSelfFound = true;
            }
            
            buffer[i] = new InternetAddress(name);
            i++;
        }
        
        if(!isYourSelfFound){
            mail.setHeader("X-Sent-YourSelf", "yes"); //Small Header to tag the fact it's a sended email so I can not read it in pop3
        }
        
        return buffer;
    }
    
    
    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        
        //Add New File        
        JFileChooser fc = new JFileChooser((FileSystemView.getFileSystemView().getHomeDirectory() + "/Bureau/"));
        fc.setMultiSelectionEnabled(false);
        fc.showOpenDialog(this);
        
        Add.setEnabled(false);
        if(JFileChooser.APPROVE_OPTION == 0){
            //File Path to Save
            String Path = fc.getSelectedFile().getAbsolutePath();
            
            try {
                UtilityLib.setFilePart(Multip, Path, FileList);
            } catch (IOException | MessagingException ex) {
                JOptionPane.showMessageDialog(this, "Erreur: " + ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            DefaultComboBoxModel model = (DefaultComboBoxModel) jComboBox1.getModel();
            model.removeAllElements();
            
            Iterator i = FileList.iterator();
            while(i.hasNext()){
                model.addElement((String) i.next());
            }
            
            jComboBox1.setModel(model);
            System.out.println(Multip.toString());
        }
        Add.setEnabled(true);
        
    }//GEN-LAST:event_AddActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        home.StartClock();
    }//GEN-LAST:event_formWindowClosed

    // <editor-fold defaultstate="collapsed" desc="Properties">
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JTextField Cc;
    private javax.swing.JTextField From;
    private javax.swing.JButton KO;
    private javax.swing.JTextPane Message1;
    private javax.swing.JButton Send;
    private javax.swing.JTextField Subject;
    private javax.swing.JTextField To;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
    // </editor-fold>
}
